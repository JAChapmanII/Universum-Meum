module example;

// Standard imports first
import tango.io.Stdout;

// Module names all lower case, underscore to separate words
import modules.other_example

// All outside of project imports clumped based on project
import libs.a.A;
import libs.b.A;

import poop.Toilet;
import poop.Flush;

/// Triple slashes for documentation
class UppercaseForEachWord
{
	public:
		void PublicMethod()
		{
			Stdout.formatln( "Class methods use getter/setters too: {}", ProtectedVariable );
		}

		// Getter/Setter for m_ProtectedVariable
		uint ProtectedVariable();
		void ProtectedVariable( uint nProtectedVariable );

		uint memberVariableThatsPublic;
		uint x;

	protected:
		// Camel case for variables, prepend m_ for those belonging to classes
		uint m_ProtectedVariable;
}

// Fold big long stuff, or logical blocks
void RandomFunction()
{ //{{{
} //}}}

int main( char[][] args )
{
	Stdout.formatln( "Invoked as; {}", args[ 0 ] );
	if( args.length > 1 )
	{
		Stdout.formatln( "Argument one: {}", args[ 1 ] );
	}

	uint a = 5, b = 7;
	uint c = ( a + ( b * b ) ) * args[ 0 ][ 0 ];

	Stdout.formatln( "a: {} b: {} c: (a+(b^2))*{} = {}", a, b, args[ 0 ][ 0 ], c );

	return 0;
}

// vim: ft=d:
